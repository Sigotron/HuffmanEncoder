#BlueJ class context
comment0.params=t
comment0.target=HuffmanTree(java.io.File)
comment0.text=\r\n\ constructor\ for\ a\ HuffmanTree\ object\r\n\ @param\ t\ File\ that\ will\ be\ evaluated\r\n
comment1.params=
comment1.target=void\ displayTree()
comment1.text=\r\n\ displays\ the\ huffman\ tree\ generated\ by\ contents\ of\ file\ with\ each\ level\r\n\ represented\ by\ a\ different\ level\ of\ indentation\r\n
comment10.params=h
comment10.target=void\ generateFreqTable(java.util.Set)
comment10.text=\r\n\ generates\ a\ string\ version\ frequency\ table\r\n\ @param\ h\ keyset\ from\ mp\r\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment2.params=root\ level
comment2.target=void\ displayTree(HuffmanTree.HNode,\ int)
comment2.text=\r\n\ private\ recursive\ helper\ method\ for\ displayTree()\ utilizes\ a\ right-root-left\r\n\ algorithm\ to\ visit\ each\ node\ and\ display\ it\ with\ proper\ indentation\r\n\ @param\ root\ HNode\ to\ be\ evaluated\r\n\ @param\ level\ int\ indicates\ level\ of\ indentation\r\n
comment3.params=t
comment3.target=void\ encodeTree(java.io.File)
comment3.text=\r\n\ generates\ an\ "encoded\ message"\ based\ off\ of\ the\ contents\ of\ the\ file,\ creates\r\n\ a\ lookup\ table\ which\ indicates\ char\ and\ code\ associated\ with\ that\ char\r\n\ @param\ t\ File\ to\ be\ evaluated\r\n
comment4.params=root\ s
comment4.target=void\ encodeTree(HuffmanTree.HNode,\ java.lang.String)
comment4.text=\r\n\ private\ recursive\ helper\ method\ traverses\ tree\ while\ saving\ the\ path\ as\ a\ string\r\n\ with\ 0\ representing\ a\ pass\ to\ the\ left\ HNode\ and\ 1\ representing\ a\ pass\ to\ the\ \r\n\ right\ HNode.\ When\ a\ leaf\ HNode\ is\ reached\ that\ code\ is\ saved\ into\ the\ HNode\r\n\ @param\ root\ HNode\ to\ be\ evaluated\r\n\ @param\ s\ String\ code\r\n
comment5.params=
comment5.target=void\ decodeMessage()
comment5.text=\r\n\ decodes\ the\ encoded\ message\ and\ displays\ the\ decoded\ message\r\n
comment6.params=
comment6.target=void\ displayLookupTable()
comment6.text=\r\n\ displays\ the\ lookup\ table\r\n
comment7.params=s
comment7.target=void\ determineFrequencies(java.lang.String)
comment7.text=\r\n\ iterates\ through\ String\ that\ is\ passed\ in\ and\ stores\ information\ into\ a\ HashMap,\ the\ "key"\r\n\ is\ represented\ by\ a\ Character\ and\ the\ Value\ is\ represented\ by\ an\ HNode.\ Determines\ the\r\n\ frequency\ for\ which\ each\ char\ in\ the\ string\ occurs\ and\ stores\ it\ into\ the\ appropriate\r\n\ HNode\ or\ "value"\r\n\ @param\ s\ String\ to\ be\ evaluated\r\n
comment8.params=
comment8.target=void\ displayAverage()
comment8.text=\r\n\ displays\ the\ average\ number\ of\ bits\ per\ symbol\ used\ in\ the\ encoded\ file\r\n
comment9.params=
comment9.target=void\ displayFreqTable()
comment9.text=\r\n\ displays\ the\ frequency\ table\r\n
numComments=12
